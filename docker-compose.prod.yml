
services:
  backend:
    build:
      context: ./backend
      #dockerfile: Dockerfile  # multistage: builder + runner
      #target: runner          # <-- specifica lo stage finale
    container_name: bfg_backend_prod
    ports:
      - "8000:8000"
    env_file:
      - .env.prod
    depends_on:
      - db
    volumes:
      - media_data:/app/media
      - ./resources/logs:/resources/logs
    environment:
      - API_KEY=${SECRET_API_KEY}


  db:
    image: postgres:15
    container_name: bfg_database_prod
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  frontend:
    build:
      context: ./frontend
      #dockerfile: Dockerfile  # multistage: builder + runner
      #target: runner          # <-- specifica lo stage finale
    container_name: bfg_frontend_prod
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - API_KEY=${SECRET_API_KEY}
    depends_on:
      - backend

volumes:
  bfg_postgres_data:
# Per avviare in produzione, usa:
# docker-compose -f docker-compose.prod.yml up --build 
