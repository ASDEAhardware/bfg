
services:
  backend:
    build:
      context: ./backend
      # dockerfile: Dockerfile fixare
      # target: builder fixare
    container_name: bfg_backend
    command: python manage.py runserver 0.0.0.0:8000
    working_dir: /app
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - db
    environment:
      - API_KEY=${SECRET_API_KEY}

  db:
    image: postgres:15
    container_name: bfg_database
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - bfg_postgres_data:/var/lib/postgresql/data

  frontend:
    build:
      context: ./frontend
      # dockerfile: Dockerfile fixare
      # target: builder fixare
    container_name: bfg_frontend
    working_dir: /app
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - API_KEY=${SECRET_API_KEY}
    command: npm run dev
    depends_on:
      - backend

  pgadmin:
    image: dpage/pgadmin4
    container_name: bfg_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "8080:80"
    depends_on:
      - db

volumes:
  bfg_postgres_data:
